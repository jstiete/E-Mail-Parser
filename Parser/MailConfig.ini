# Configuration File for E-Mail parser
# ----------------------------------------------------------------------------------------------------
#
# Required Sections:
# - General:  Important definitions about connection, datatypes and logging
# - DataType: Global keyword for all datatypes, which can define the handling of an e-mail attachment
# ----------------------------------------------------------------------------------------------------
#
# Variables are allowed in 'default', 'filename' and 'directory' option.
# known variables:
# - data type keys with the value from mail or metadata: i.e. $(Event), $(Tags), $(Create_Year), etc.
# - $(Mail_Year), $(Mail_Month), $(Mail_Day): Recieved date
# - $(File_Name): Original filename
# - $(*): each '*' means one digit of a serial number. $(****) names the 10th file to '00010'
#
# Category is a special Key. It returns an path defined by the category keyword. 
# categoryRoot (which is the root path for the category folder tree) and
# allowSupercategory (which says, if it is allowed to store attachments in supercategories)
# are required in the Category-section (if a Category section exists).
# e.g. Category=mySubCat1 searches in categoryRoot for the folder mySubCat1 (e.g. './mySuperCat/mySubCat/mySubCat1')
# the output directory './home/$(Category)'is then translated to './home/mySuperCat/mySubCat/mySubCat1'
#
# Required Options for Keys:
# - name           String  Identifier in the E-Mail
# Optional Options for Keys:
# - default        String  Default Value if no other Value is given in E-Mail.
# - writeMetadata  List    Writes the value from the E-Mail to the Metadata.
# - appendMetadata List    Appends the Value from the E-Mail to the Metadata.
# - readMetadata   List    Read the first metadata tags and execute the optional regular expresssion
#                          if returnvalue is empty read the next tag from list and so on..
# - RegExprPattern String  Optional regular expression for masking the read metadata 
#                          e.g. search for '2017' in CreationDate '2017:12:24 18:00:00'
#
# The Parser uses Phil Harvey's Exiftool to change metadata. If the path of the executable is not 
# in the PATH variable. It must be given in the exiftoolPath-option.
# tempPath    is used as temporary directory for data processing (e.g. RAM-disk)
# cachePath   is the Path on HDD where incomplete mails are saved, 
#             this directory is also used if processingPath is not given or empty
#
[General]
protocol = file
imapserver = 
smtpserver = 
username = 
password = 
datatypes = Photo, Document
logfile = ./OutputData/E-MailParser.log
exiftoolpath = 
cachepath = ./OutputData/save
temppath = 

[DataType]
name = Datentyp

[Photo]
fileformats = jpg, jpeg, png, bmp
keys = Tags,Event, Author, ImageRights, Create_Year, Create_Month, Create_Day
category = Photo_Category
directory = ./OutputData/$(Photo_Category)/$(Mail_Year)
filename = $(File_Name)_$(Create_Year)-$(Create_Month)-$(Create_Day)_($(**))

[Document]
fileformats = pdf
keys = Event
category = Doc_Category
directory = ./OutputData/$(Doc_Category)/$(Mail_Year)
filename = $(Event)_$(Mail_Year)-$(Mail_Month)-$(Mail_Day)_$(**)

[Photo_Category]
name = Category
categoryroot = ./InputData/Categories
allowsupercategory = False
default = unsorted

[Doc_Category]
name = Category
categoryroot = ./InputData/Categories
allowsupercategory = False
default = unsorted

[Tags]
name = Tag
appendmetadata = XPComment

[Event]
name = Event

[Author]
name = Autor
writemetadata = Artist, Creator

[ImageRights]
name = Copyright
writemetadata = Rights
default = Dieses Picture is mine $(Mail_Year)

[Create_Year]
name = Create_Year
readmetadata = DateTimeOriginal, CreateDate
regexprpattern = ([0-9]+)(?=:)
default = $(Mail_Year)

[Create_Month]
name = Create_Month
readmetadata = DateTimeOriginal, CreateDate
regexprpattern = (?<=:)([0-9]+)(?=:.+ )
default = $(Mail_Month)

[Create_Day]
name = Create_Day
readmetadata = DateTimeOriginal, CreateDate
regexprpattern = ([0-9]+)(?= )
default = $(Mail_Day)

